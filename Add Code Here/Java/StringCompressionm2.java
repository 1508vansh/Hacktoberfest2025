public class StringCompressionm2 {// easy readable method............
    public static int compress(char[] chars) {
        StringBuilder ans = new StringBuilder();
        int i = 0;
        int j = 0;
        while (j < chars.length) {
            if (chars[i] == chars[j])// if duplicates are present then increase j........
                j++;
            else {// if curr element is not equal to the last previous element.....
                ans.append(chars[i]);// add the element in the answer....
                int len = j - i;// get frequency of the element by substracting the i from j........
                if (len > 1)// if length is greater than 1 only then add the frequency......
                    ans.append(len);// add(len)......
                i = j;// update i as j..........
            }
        }
        ans.append(chars[i]);// add the last element.......
        int len = j - i;// take the length...
        if (len > 1)// if frequency is greater than 1 only then add the frequency of the last
                    // element.....
            ans.append(len);
        for (int k = 0; k < ans.length(); k++) {// add the characters from the answer string in the chars
                                                // array....inplace...
            chars[k] = ans.charAt(k);
        }
        return ans.length();// return the length........of the total answer.....
    }

    public static void main(String[] args) {
        char[] chars = { 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'c', 'c', 'c' };
        int ans = compress(chars);// {'a','2','b','1','2','c','3'}
        System.out.println(ans);
    }
}
